===========================================================================================================================
[22년 09월 30일] ========================================================================================================
========================================================================================================

1. ajax 강제로 redirect하기 성공

2. cart model 완벽정리 완료

3. order작업시작
  : 주문자 정보 싹 받아오고, //OK
  : form에 terms 체크박스 체크안하면 못하게하고 //OK
  : 기타 사항( model, 잡다 버그) 완성 //OK


<미완성 완성중>

1. admin 주문 확인서 페이지 작성 [admin으로 넣어서 admin이 확인하게 하기]
  [product img, product name, price, quantity, totalprice]  + order Number! + date! + status 변경! => db로 연동하여 client 페이지에 보여주기

2. client 주문 확인서 페이지 작성
  [product img, product name, price, quantity, totalprice]  + order Number! + date! + status!

3. 카트 아무것도 없으면 order 못누르게하기 [ alert로 상품이 없습니다!, 상품을 골라주새요!] 
  //OK

4. order 아무것도 없으면, 아예 딴 화면처럼 표시하기 [현재 당신은 주문할것이 없습니다. or 주문내역확인시켜주기]

  //OK?

<해본거 추가?>

1. 객체 안의 data를 삭제해보았다.
  const data  = { id: xx, name: xx}
  delete data.id

2. form은 input 태그의 정보만 가져올 수 있다는걸 분명히 알았다.

3. date를 if 조건을 사용하여 적어보았다.

class PayOrder{
  constructor(date){        
      if(date =="now"){
          this.date = new Date().toLocaleDateString("ko-kr") 
      }
  }
  

[작업순서]
나는 veiw -controller -model 순이 좋다!


<내일 할것>


2. 각 사용자 로그인때마다, 주문내역 확인하는 페이지, 혹은 그 아이디 누르면 아래로 촥 나오는 창 만들기
: 촥 나오는 창에는 [사용자정보, 주문내역] 이 들어가게 해보자


===========================================================================================================================
[22년 10월 2일] ========================================================================================================
========================================================================================================

1. 장바구니 order하면 아직 삭제 ㄴㄴ 
2. pay to order에서 pay 하는 순간 삭제

3. order는 따로 페이지로 들어ㅏ가게 하면 안된다.
4. order를 접속가능한페이지는 => all client order를 보여주는 페이지로 변경 [모든 주문내역]

5. client 모든주문내역, 주문상세 페이지 작성
6. 버그수정

7. 관리자페이지에서 주문관리 작성
  : 상태 업데이트, 메일보내기버튼

  ===========================================================================================================================
  [22년 10월 4일] ========================================================================================================
  ========================================================================================================

1. quantity 넣을때, 이상한 수 방지 위한 validation 작성

  // 정수는 1로 나누면 항상 나머지가 0인 것을 이용해, [0 이상의 자연수만 남기고] 이상한 수 방지

  function isIntergar(number){
      return (number%1==0)
  }

  for (let quantity of data.productQuantities ){
      let check = isIntergar(quantity)
      if(!check || quantity<0){
          alert("check your quantity")
          return
      }
  }


2. javascript 코드 filter()와 indexOf() 를 사용하여, 배열 [삭제 추가 정리하기]

- Array.filter(function( item ){
    return item.indexOf( condition ) 
  })


3. 모바일메뉴 cart 안의 수 업데이트 안되던것 fix

4. 기타 fix

  